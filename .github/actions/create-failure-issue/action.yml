name: Create Failure Issue
description: Create failure issues (closing handled separately)

inputs:
  failure-type:
    required: true

runs:
  using: composite
  steps:
    - name: Create failure issue
      uses: actions/github-script@v7
      with:
        script: |
          const type = '${{ inputs.failure-type }}';
          const sha = context.sha.substring(0, 7);
          const runUrl = `${context.payload.repository.html_url}/actions/runs/${context.runId}`;
          const commitUrl = `${context.payload.repository.html_url}/commit/${context.sha}`;
          
          const templates = {
            ci: {
              title: `ðŸš¨ CI Failed - Build ${sha}`,
              labels: ['ci-failure', 'bug', 'priority-high'],
              body: `## ðŸ”¥ CI Pipeline Failed
          
          **Commit:** [${sha}](${commitUrl})
          **Branch:** ${context.ref.replace('refs/heads/', '')}
          **Logs:** [View Details](${runUrl})
          **Time:** ${new Date().toISOString()}
          
          ### ðŸ”§ Common Issues
          - Security vulnerabilities detected
          - Linting errors found  
          - Test failures
          - Build configuration problems
          
          ### âœ… Action Items
          - [ ] Check [workflow logs](${runUrl})
          - [ ] Fix identified issues
          - [ ] Push fixes to trigger re-run
          
          > ðŸ¤– **Auto-close:** This issue will automatically close when CI passes.
          
          ---
          *Auto-created by GitHub Actions*`
            },
            
            release: {
              title: `ðŸš¨ Release Failed - ${context.ref.replace('refs/tags/', '')}`,
              labels: ['release-failure', 'bug', 'priority-critical'],
              body: `## ðŸ”¥ Release Pipeline Failed
          
          **Tag:** ${context.ref.replace('refs/tags/', '')}
          **Commit:** [${sha}](${commitUrl})
          **Logs:** [View Details](${runUrl})
          **Time:** ${new Date().toISOString()}
          
          ### ðŸ”§ Common Issues
          - GoReleaser configuration errors
          - Multi-platform build failures
          - Docker registry issues
          - Missing release assets
          
          ### âœ… Action Items
          - [ ] Check [workflow logs](${runUrl})
          - [ ] Fix GoReleaser configuration
          - [ ] Re-tag and release:
            \`\`\`bash
            git tag -d ${context.ref.replace('refs/tags/', '')}
            git push origin :${context.ref.replace('refs/tags/', '')}
            git tag ${context.ref.replace('refs/tags/', '')}
            git push origin ${context.ref.replace('refs/tags/', '')}
            \`\`\`
          
          > ðŸ¤– **Auto-close:** This issue will automatically close when release succeeds.
          
          ---
          *Auto-created by GitHub Actions*`
            }
          };
          
          const template = templates[type];
          if (!template) return;
          
          // Check for existing issue with same commit
          const { data: existingIssues } = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            labels: template.labels[0],
            per_page: 10
          });
          
          const duplicateIssue = existingIssues.find(issue => 
            issue.body && issue.body.includes(sha)
          );
          
          if (duplicateIssue) {
            console.log(`Issue already exists for commit ${sha}: #${duplicateIssue.number}`);
            return;
          }
          
          // Create new issue
          const { data: newIssue } = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: template.title,
            body: template.body,
            labels: template.labels
          });
          
          console.log(`Created issue #${newIssue.number}: ${template.title}`);
