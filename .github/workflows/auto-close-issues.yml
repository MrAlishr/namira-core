name: Auto Close Issues

on:
  push:
    branches: [main, dev]
  workflow_run:
    workflows: ["CI", "Release"]
    types: [completed]

permissions:
  issues: write
  contents: read

jobs:
  auto-close:
    name: Close Resolved Issues
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') ||
      (github.event_name == 'push')
    steps:
      - name: Close resolved issues
        uses: actions/github-script@v7
        with:
          script: |
            const sha = context.sha.substring(0, 7);
            const runUrl = `${context.payload.repository.html_url}/actions/runs/${context.runId}`;
            const commitUrl = `${context.payload.repository.html_url}/commit/${context.sha}`;
            
            console.log(`üîç Checking for issues to auto-close (commit: ${sha})`);
            
            // Get all open failure issues - fix the labels query
            const { data: openIssues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              per_page: 50
            });
            
            // Filter for failure issues
            const failureIssues = openIssues.filter(issue => 
              issue.labels.some(label => 
                label.name === 'ci-failure' || label.name === 'release-failure'
              )
            );
            
            console.log(`Found ${failureIssues.length} open failure issues`);
            
            for (const issue of failureIssues) {
              // Close issues that are NOT from current commit
              const issueCommit = issue.body?.match(/\*\*Commit:\*\* \[([a-f0-9]{7})\]/)?.[1];
              
              if (issueCommit && issueCommit !== sha) {
                const issueType = issue.labels.find(l => 
                  l.name === 'ci-failure' || l.name === 'release-failure'
                )?.name || 'unknown';
                
                console.log(`üîÑ Closing issue #${issue.number} (commit: ${issueCommit} ‚Üí ${sha})`);
                
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  body: `‚úÖ **Auto-resolved**
            
            This ${issueType.replace('-', ' ')} has been resolved by successful workflow execution.
            
            **Resolved by:** [${sha}](${commitUrl})
            **Workflow:** [View Run](${runUrl})
            **Time:** ${new Date().toISOString()}
            
            ---
            *Auto-closed by GitHub Actions*`
                });
                
                // Get current labels and add auto-resolved
                const currentLabels = issue.labels.map(l => l.name);
                const newLabels = [...currentLabels, 'auto-resolved'];
                
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  state: 'closed',
                  labels: newLabels
                });
                
                console.log(`‚úÖ Auto-closed issue #${issue.number}: ${issue.title}`);
              } else if (issueCommit === sha) {
                console.log(`‚è≠Ô∏è  Skipping issue #${issue.number} (same commit: ${sha})`);
              } else {
                console.log(`‚ö†Ô∏è  Could not extract commit from issue #${issue.number}`);
              }
            }
            
            if (failureIssues.length === 0) {
              console.log('üéâ No failure issues found - all good!');
            }